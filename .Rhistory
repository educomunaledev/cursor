ggplot() +
aes(x = median, y = name, colour = median) + #Aesthetics (mapping)
#Geometria
geom_point(shape = "circle",
size = 1) +
#Highlight (add sempre após geom_)
gghighlight(median >= 95,
label_key = name,
label_params = list(size = 3),
unhighlighted_params = list(colour = "red")) +
#Marcações
#Linhas
geom_vline(xintercept = 95,
colour = "black",
size =0.2,
linetype = 2) +
#Tema, aparência
theme_light() +
# Labels, titulo, subtitulo, titulo dos eixos
labs(title = "Vacinação em países da América Latina",
subtitle = "Sarampo, MCV1, Dose 1, entre 2000 e 2023",
y = "Países",
x = "Mediana (Cobertura %)",
tag = "Figure A.",
colour = "Cobertura vacinal",
caption = "Fonte: Feito pela UPVacina") +
# Aparência especifica
theme(
#Texto geral
text = element_text(family = "mono",  #sans, mono, serif
color = "black"),
#Título, subtítulo e tag
plot.title = element_text(size = 12,
face = "bold",
hjust = 0,
vjust = 0.5),
plot.subtitle = element_text(size = 10),
plot.tag.position = "topleft",
plot.tag = element_text(vjust = 5,
size = 12,
face = "bold"),
#Legenda
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10),
#Eixos
axis.title.x = element_text(size = 10,
angle = 0,
color = "black"),
axis.text.x = element_text(color = "black",
size = 8,
angle = 0),
axis.text.y = element_text(size = 8,
color = "black"),
#Margens do gráfico
plot.margin = unit(c(0.5, #Top
1, #Right
0.5, #Bottom
0), #Left
"cm") #Unidade)
)
#Visualizar
plot
plot =
# Manipular tabela
latin_2000_2023 %>%
filter(vaccine %in% "MCV1") %>%
mutate(name = fct_reorder(name, median)) %>%
#Criar base do gráfico
ggplot() +
aes(x = median, y = name, colour = median) + #Aesthetics (mapping)
#Geometria
geom_point(shape = "circle",
size = 1) +
#Highlight (add sempre após geom_)
gghighlight(median >= 95,
label_key = name,
label_params = list(size = 3),
unhighlighted_params = list(colour = "red")) +
#Marcações
#Linhas
geom_vline(xintercept = 95,
colour = "black",
size =0.2,
linetype = 2) +
#Tema, aparência
theme_light() +
# Labels, titulo, subtitulo, titulo dos eixos
labs(title = "Vacinação em países da América Latina",
subtitle = "Sarampo, MCV1, Dose 1, entre 2000 e 2023",
y = "Países",
x = "Mediana (Cobertura %)",
tag = "Figure A.",
colour = "Cobertura vacinal",
caption = "Fonte: Feito pela UPVacina") +
# Aparência especifica
theme(
#Texto geral
text = element_text(family = "sans",  #sans, mono, serif
color = "black"),
#Título, subtítulo e tag
plot.title = element_text(size = 12,
face = "bold",
hjust = 0,
vjust = 0.5),
plot.subtitle = element_text(size = 10),
plot.tag.position = "topleft",
plot.tag = element_text(vjust = 5,
size = 12,
face = "bold"),
#Legenda
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10),
#Eixos
axis.title.x = element_text(size = 10,
angle = 0,
color = "black"),
axis.text.x = element_text(color = "black",
size = 8,
angle = 0),
axis.text.y = element_text(size = 8,
color = "black"),
#Margens do gráfico
plot.margin = unit(c(0.5, #Top
1, #Right
0.5, #Bottom
0), #Left
"cm") #Unidade)
)
plot =
# Manipular tabela
latin_2000_2023 %>%
filter(vaccine %in% "MCV1") %>%
mutate(name = fct_reorder(name, median)) %>%
#Criar base do gráfico
ggplot() +
aes(x = median, y = name, colour = median) + #Aesthetics (mapping)
#Geometria
geom_point(shape = "circle",
size = 1) +
#Highlight (add sempre após geom_)
gghighlight(median >= 95,
label_key = name,
label_params = list(size = 3),
unhighlighted_params = list(colour = "red")) +
#Marcações
#Linhas
geom_vline(xintercept = 95,
colour = "black",
size =0.2,
linetype = 2) +
#Tema, aparência
theme_light() +
# Labels, titulo, subtitulo, titulo dos eixos
labs(title = "Vacinação em países da América Latina",
subtitle = "Sarampo, MCV1, Dose 1, entre 2000 e 2023",
y = "Países",
x = "Mediana (Cobertura %)",
tag = "Figure A.",
colour = "Cobertura vacinal",
caption = "Fonte: Feito pela UPVacina") +
# Aparência especifica
theme(
#Texto geral
text = element_text(family = "sans",  #sans, mono, serif
color = "black"),
#Título, subtítulo e tag
plot.title = element_text(size = 12,
face = "bold",
hjust = 0,
vjust = 0.5),
plot.subtitle = element_text(size = 10),
plot.tag.position = "topleft",
plot.tag = element_text(vjust = 5,
size = 12,
face = "bold"),
#Legenda
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10),
#Eixos
axis.title.x = element_text(size = 10,
angle = 0,
color = "black"),
axis.text.x = element_text(color = "black",
size = 8,
angle = 0),
axis.text.y = element_text(size = 8,
color = "black"),
#Margens do gráfico
plot.margin = unit(c(0.5, #Top
1, #Right
0.5, #Bottom
0), #Left
"cm") #Unidade)
)
#Visualizar
plot
#Visualizar
plot
#Salvar
ggsave(plot, file = "Sarampo_LatinAmerica_2000_2023.png", width = 10, height = 5)
plot
plot
plot %>%
ggplotly()
#Unindo gráficos -----
vaccination = data_long_annotated %>%
filter(name == "Brazil",
vaccine == "MCV1") %>%
ggplot() +
geom_line(mapping = aes(
x = year,
y = coverage),
colour = "#4DBBD5B2",
linewidth = 2) +
geom_text(aes(x = year,
y = coverage,
label = coverage),
vjust = -0.5,
size = 2) +
theme_minimal() +
labs(title = "Cobertura vacinal contra o sarampo, Brasil",
x = "Ano",
y = "Cobertura vacinal (%)") +
ylim(0, 110)
vaccination
#Unindo gráficos -----
vaccination = data_long_annotated %>%
filter(name == "Brazil",
vaccine == "MCV1") %>%
ggplot() +
geom_line(mapping = aes(
x = year,
y = coverage),
colour = "#4DBBD5B2",
linewidth = 2) +
geom_text(aes(x = year,
y = coverage,
label = coverage),
vjust = -0.5,
size = 2) +
theme_minimal() +
labs(title = "Cobertura vacinal contra o sarampo, Brasil",
x = "Ano",
y = "Cobertura vacinal (%)") +
ylim(0, 110)
vaccination
#Mortes
deaths = data_long_annotated %>%
filter(name == "Brazil",
vaccine == "MCV1") %>%
ggplot() +
aes(x = year, y = total_deaths) +
geom_col(fill = "#DC0000B2") +
geom_text(aes(label = total_deaths),
vjust = -0.5,
size = 2) +
theme_minimal() +
theme(text = element_text(size = 10)) +
labs(title = "Mortes por sarampo, Brasil",
x = "Ano",
y = "Mortes") +
ylim(0, 3400)
deaths
vaccination
deaths
#Unir gráficos
(vaccination / deaths)
(vaccination + deaths)
#Salvar
(vaccination / deaths) %>%
ggsave(file = "Sarampo_Brasil_1980_2023.png", width = 10, height = 5)
#Boxplot simples por ano
boxplot_years = data_long_annotated %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2019)) %>%
ggplot() +
aes(x = "",
y = coverage,
fill = continent) +
geom_boxplot() +
scale_fill_brewer(palette = "Set2", direction = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
hjust = 1),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
legend.position = "right") +
facet_wrap(vars(year), ncol = 4) +
labs(title = "Cobertura vacinal contra o sarampo",
subtitle = "Primeira dose (MCV1)",
x = "Região UNICEF",
y = "Cobertura vacinal (%)",
fill = "Região UNICEF")
boxplot_years
#Boxplot simples por ano
boxplot_years = data_long_annotated %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2019)) %>%
ggplot() +
aes(x = "",
y = coverage,
fill = continent) +
geom_boxplot() +
scale_fill_brewer(palette = "Set2", direction = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
hjust = 1),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
legend.position = "right") +
facet_wrap(vars(year), ncol = 4) +
labs(title = "Cobertura vacinal contra o sarampo",
subtitle = "Primeira dose (MCV1)",
x = "Região UNICEF",
y = "Cobertura vacinal (%)",
fill = "Região UNICEF")
#Visualizar
boxplot_years
#Boxplot simples por ano
boxplot_years = data_long_annotated %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2019)) %>%
ggplot() +
aes(x = "",
y = coverage,
fill = continent) +
geom_boxplot() +
scale_fill_brewer(palette = "Set2", direction = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
hjust = 1),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
legend.position = "right") +
facet_wrap(vars(year), ncol = 1) +
labs(title = "Cobertura vacinal contra o sarampo",
subtitle = "Primeira dose (MCV1)",
x = "Região UNICEF",
y = "Cobertura vacinal (%)",
fill = "Região UNICEF")
#Visualizar
boxplot_years
#Boxplot simples por ano
boxplot_years = data_long_annotated %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2019)) %>%
ggplot() +
aes(x = "",
y = coverage,
fill = continent) +
geom_boxplot() +
scale_fill_brewer(palette = "Set2", direction = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
hjust = 1),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
legend.position = "right") +
facet_wrap(vars(year), ncol = 4) +
labs(title = "Cobertura vacinal contra o sarampo",
subtitle = "Primeira dose (MCV1)",
x = "Região UNICEF",
y = "Cobertura vacinal (%)",
fill = "Região UNICEF")
#Visualizar
boxplot_years
# Cores
#Mudando a paleta
library(ggsci)
# Cores
#Mudando a paleta
library(ggsci)
library(scales)
vignette("ggsci")
nrc = pal_npg("nrc", #Especificar paleta
alpha = 0.7)(8) #Gerar 8 cores com transparencia = 70%
nrc %>%
show_col()
boxplot_years +
scale_fill_npg()
boxplot_years +
scale_fill_npg()
#Boxplot simples de ano
boxplot_regions = data_long_annotated %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2020)) %>%
mutate(year = as.factor(year)) %>%
ggplot() +
aes(x = year, y = coverage, fill = year) +
geom_boxplot() +
geom_jitter(aes(label = name),
alpha = 0.2,
na.rm = T) +
scale_fill_brewer(palette = "Set2", direction = 1) +
scale_color_distiller(palette = "Set2", direction = 1) +
theme_minimal() +
facet_wrap(vars(continent)) +
scale_fill_npg()
boxplot_regions
# Gráfico interativo
boxplot_regions %>%
ggplotly()
#Boxplot por vacina
data_long_annotated %>%
filter(type == "country",
year == 2015) %>%
ggplot() +
aes(x = "", y = coverage, fill = continent) +
geom_boxplot() +
scale_fill_viridis_d(option = "plasma", direction = 1) +
theme_minimal() +
facet_wrap(vars(vaccine),
nrow = 1) +
labs(x = "Regiões",
y = "Cobertura",
titulo = "Cobertura vacinal por região, em 2000") +
scale_fill_lancet()
# Múltiplos gráficos ----
#Todas as linhas
data_long_standardized %>%
filter(year >= 2012& year <= 2022) %>%
filter(region %in% "LACR") %>%
ggplot() +
aes(x = year, y = coverage, color = name) +
geom_line() +
theme_minimal() +
facet_wrap(vars(vaccine), scales = "free_x")
data_long_standardized %>%
filter(year >= 2012 & year <= 2022,
name %in% c("Brazil", "Colombia"))
#Método 1
br_cov = data_long_standardized %>%
filter(year >= 2012 & year <= 2022,
name %in% c("Brazil", "Colombia")) %>%
ggplot() +
aes(x = year,
y = coverage,
colour = name) +
geom_line(linewidth = 2) +
theme_minimal() +
facet_wrap(vars(vaccine)) +
labs(title = "Cobertura vacinal, por vacina",
x = "Ano",
y = "Cobertura (%)")  +
scale_color_npg()
br_cov
#Método 2
br_cov = data_long_standardized %>%
filter(year >= 2012 & year <= 2022,
region %in% c("LACR")) %>%
ggplot() +
geom_line(aes(x = year,
y = coverage,
colour = name),
linewidth = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(vars(vaccine)) +
labs(title = "Cobertura vacinal, por vacina",
x = "Ano",
y = "Cobertura (%)") +
gghighlight(name %in% c("Brazil", "Colombia"),
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1,
colour = "gray90",
alpha = 0.3)) +
scale_color_npg()
br_cov
#Mortes
br_mortes = data_long_annotated %>%
filter(year >= 2012 & year <= 2022,
region %in% c("LACR")) %>%
select(name, year, total_deaths, death_rate_100thousand, disease_vac) %>%
distinct() %>%
drop_na(total_deaths) %>%
ggplot() +
geom_line(aes(x = round(year, 0),
y = total_deaths,
colour = name),
linewidth = 2) +
theme_minimal() +
facet_wrap(vars(disease_vac),
scales = "free",
nrow = 3) +
labs(title = "Mortes por doença imunoprevenível",
x = "Ano",
y = "Mortes") +
#highlight
gghighlight(name %in% c("Brazil", "Colombia"), #Linhas somente com name == "Brazil'
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1, #Opções para linhas não marcadas
colour = "gray90",
alpha = 0.5)) +
scale_color_npg()
br_mortes
br_cov + br_mortes
# Unir gráficos
ggsave(br_cov + br_mortes, file = "br_cov_mortes.png")
# Chamando os pacotes da biblioteca
library(tidyverse) #Metapacote
library(skimr) #Diagnóstico de tabela
library(janitor) #Limpeza de tabelas
library(esquisse) #Plotagem de gráficos prática
options(repos = c(CRAN = "https://cran.r-project.org"))  # For global mirror
# Baixar pacotes do CRAN para a biblioteca (Para descomentar, use Ctrl + Shift + C)
install.packages("tidyverse")
install.packages("tidyverse")
