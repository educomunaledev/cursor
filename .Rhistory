y = coverage,
colour = name) +
geom_line(linewidth = 2) +
theme_minimal() +
facet_wrap(vars(vaccine)) +
labs(title = "Cobertura vacinal, por vacina",
x = "Ano",
y = "Cobertura (%)")  +
scale_color_npg()
br_cov
#Método 2
br_cov = cobertura_vacinal %>%
filter(year >= 2012 & year <= 2022,
region %in% c("LACR")) %>%
ggplot() +
geom_line(aes(x = year,
y = coverage,
colour = name),
linewidth = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(vars(vaccine)) +
labs(title = "Cobertura vacinal, por vacina",
x = "Ano",
y = "Cobertura (%)") +
gghighlight(name %in% c("Brazil", "Colombia"),
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1,
colour = "gray90",
alpha = 0.3)) +
scale_color_npg()
br_cov
#Mortes
br_mortes = mortes_doencas %>%
filter(year >= 2012 & year <= 2022,
region_complete == "Latin America and Caribbean") %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths) %>%
ggplot() +
geom_line(aes(x = round(year, 0),
y = total_deaths,
colour = name),
linewidth = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(vars(death_disease),
scales = "free",
nrow = 3) +
labs(title = "Mortes por doença imunoprevenível",
x = "Ano",
y = "Mortes") +
#highlight
gghighlight(name %in% c("Brazil", "Colombia"), #Linhas somente com name == "Brazil'
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1, #Opções para linhas não marcadas
colour = "gray90",
alpha = 0.5)) +
scale_color_npg()
br_mortes
# Unir gráficos
br_cov + br_mortes
#Salvar
ggsave(br_cov + br_mortes,
file = "br_cov_mortes.png",
width = 15, #Largura
height = 10) #Altura
# # Filtrar tabela
# latin_2000_2023 %>%
#   filter(vaccine %in% c("MCV1")) %>%
#   mutate(name = fct_reorder(name, median)) %>%
#
#   #Criar base do gráfico
#   ggplot() +
#   aes(x = x,
#       y = y,
#       colour = ) + #Aesthetics (o que cada elemento representa)
#
#   #Geometria
#   geom_point(shape = "circle",
#              size = 1) +
#
#   geom_text(aes(y = )) +
#
#   #Tema, aparência
#   theme_light() +
#
#   #Escala de cores
#   scale_colour_gradient(low = "#DC0000B2",
#                         high = "#4DBBD5B2") +
#
#   # Labels, titulo, subtitulo, titulo dos eixos
#   labs(
#      title = "",
#      subtitle = "",
#      y = "",
#      x = "",
#      tag = "",
#      caption = "Fonte:") +
#
#   # Aparência especifica
#   theme(
#
#     #Texto geral
#     text = element_text(family = "",
#                         color = ""),
#
#     #Título, subtítulo e tag
#     plot.title = element_text(size = 12,
#                               face = "bold",
#                               hjust = 0,
#                               vjust = 0.5),
#     plot.subtitle = element_text(size = 10),
#     plot.tag.position = "topleft",
#     plot.tag = element_text(vjust = 5,
#                             size = 12,
#                             face = "bold"),
#     #Eixos
#     axis.title.x = element_text(size = 10,
#                                 angle = 0,
#                                 color = "black"),
#     axis.text.x = element_text(color = "black",
#                                size = 8,
#                                angle = 90),
#     axis.text.y = element_text(size = 8,
#                                color = "black"),
#
#     #Margens do gráfico
#     plot.margin = unit(c(0, #Top
#                          0, #Right
#                          0, #Bottom
#                          0), #Left
#                        "cm") #Unidade)
#   ) +
#
#   #Marcações
#   #Linhas
#   geom_hline(yintercept = "Brazil",
#              colour = "blue") +
#   geom_hline(yintercept = "Haiti",
#               colour = "red") +
#   geom_vline(xintercept = 95,
#              colour = "black",
#              size = 1,
#              linetype = 1
#              )
#Quantos países por continente registraram os dados na UNICEF?
#Todos os continentes juntos
cobertura_vacinal %>%
filter(type == "country",
continent != "Other") %>%
select(coverage, year, continent, vaccine) %>%
drop_na(coverage) %>%
ggplot() +
aes(x = year, fill = continent) +
geom_histogram(bins = 43L) +
theme_minimal() +
facet_wrap(vars(vaccine)) +
scale_fill_npg()
# Continentes separados
cobertura_vacinal %>%
filter(type == "country",
continent != "Other") %>%
select(coverage, year, continent, vaccine) %>%
drop_na(coverage) %>%
ggplot() +
aes(x = year, fill = continent) +
geom_histogram(bins = 43L) +
scale_fill_hue(direction = 1) +
theme_minimal() +
facet_grid(continent ~ vaccine,
scales = "free") +
theme(axis.text.x = element_text(angle = 90))
#Quantos países aumentaram sua cobertura vacinal em cada decada?
cobertura_vacinal %>%
filter(type == "country",
continent != "Other",
year %in% c(1990, 2000, 2010, 2019)) %>%
ggplot() +
aes(x = coverage, fill = continent) +
geom_histogram(bins = 10L) +
theme_minimal() +
theme(plot.caption = element_text(size = 13L),
legend.position = "top",
axis.text.x = element_text(angle = 90),
strip.text.y = element_text(angle = 0,
hjust = 0)) +
facet_grid(~vaccine~year, scales = "free")
gapminder %>%
filter(year %in% c(1952, 1982, 2002)) %>%
ggplot() +
aes(
x = gdpPercap,
y = lifeExp,
colour = continent,
size = pop,
group = country
) +
geom_point(shape = "circle") +
scale_x_continuous(trans = "log10") +
theme_minimal() +
facet_wrap(vars(year), scales = "free_x") +
gghighlight(country == "China") +
scale_color_npg()
plot =
# Manipular tabela
latin_2000_2023 %>%
filter(vaccine %in% "MCV1") %>%
mutate(name = fct_reorder(name, median)) %>%
#Criar base do gráfico
ggplot() +
aes(x = median, y = name, colour = median) + #Aesthetics (mapping)
#Geometria
geom_point(shape = "circle",
size = 1) +
#Highlight (add sempre após geom_)
gghighlight(median >= 95, #Filtragem
label_key = name, #Nome do label
label_params = list(size = 3), #Tamanho da fonte
unhighlighted_params = list(colour = "red")) +
#Marcações
#Add Linha vertical
geom_vline(xintercept = 95,
colour = "black",
linewidth =0.2,
linetype = 2) +
#Tema, aparência
theme_light() +
# Labels, titulo, subtitulo, titulo dos eixos
labs(title = "Vacinação em países da América Latina",
subtitle = "Sarampo, MCV1, Dose 1, entre 2000 e 2023",
y = "Países",
x = "Mediana (Cobertura %)",
tag = "Figure A.",
colour = "Cobertura vacinal",
caption = "Fonte: Feito pela UPVacina") +
# Aparência especifica
theme(
#Texto geral
text = element_text(family = "sans",  #sans, mono, serif
color = "black"),
#Título, subtítulo e tag
plot.title = element_text(size = 12,
face = "bold",
hjust = 0,
vjust = 0.5),
plot.subtitle = element_text(size = 10),
plot.tag.position = "topleft",
plot.tag = element_text(vjust = 5,
size = 12,
face = "bold"),
#Legenda
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10),
#Eixos
axis.title.x = element_text(size = 10,
angle = 0,
color = "black"),
axis.text.x = element_text(color = "black",
size = 8,
angle = 0),
axis.text.y = element_text(size = 8,
color = "black"),
#Margens do gráfico
plot.margin = unit(c(0.5, #Top
1, #Right
0.5, #Bottom
0), #Left
"cm") #Unidade)
)
#Visualizar
plot
plot %>%
ggplotly()
plot %>%
ggplotly()
#Boxplot simples de ano
boxplot_regions = cobertura_vacinal %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2020)) %>%
mutate(year = as.factor(year)) %>%
ggplot() +
aes(x = year, y = coverage, fill = year) +
geom_boxplot() +
geom_jitter(aes(label = name),
alpha = 0.2,
na.rm = T) +
scale_fill_brewer(palette = "Set2", direction = 1) +
scale_color_distiller(palette = "Set2", direction = 1) +
theme_minimal() +
facet_wrap(vars(continent)) +
scale_fill_npg()
boxplot_regions
mortes_doencas %>%
filter(year >= 2012 & year <= 2022,
region_complete == "Latin America and Caribbean") %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths)
mortes_doencas %>%
filter(year >= 2012 & year <= 2022,
region_complete == "Latin America and Caribbean",) %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths)
mortes_doencas %>%
filter(year >= 2012 & year <= 2022,
region_complete == "Latin America and Caribbean",
death_disease == "Poliomyelitis") %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths)
mortes_doencas %>%
filter(year >= 2012 & year <= 2022,
region_complete == "Latin America and Caribbean",
death_disease == "Poliomyelitis") %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths) %>% view()
library(readr)
WHOMortalityDatabase_Deaths_sex_age_a_country_area_year_Poliomyelitis_8th_abril_2024_11_53 <- read_csv("raw-data/WHO mortality/WHOMortalityDatabase_Deaths_sex_age_a_country_area_year-Poliomyelitis_8th abril 2024 11_53.csv",
col_types = cols(`Indicator Code: CG0130` = col_skip()),
skip = 5)
View(WHOMortalityDatabase_Deaths_sex_age_a_country_area_year_Poliomyelitis_8th_abril_2024_11_53)
#Mortes
br_mortes = mortes_doencas %>%
filter(year >= 2012 & year <= 2022,
region_complete == "Latin America and Caribbean") %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths) %>%
ggplot() +
geom_line(aes(x = round(year, 0),
y = total_deaths,
colour = name),
linewidth = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(vars(death_disease),
scales = "free",
nrow = 3) +
labs(title = "Mortes por doença imunoprevenível",
x = "Ano",
y = "Mortes") +
#highlight
gghighlight(name %in% c("Brazil", "Colombia"), #Linhas somente com name == "Brazil'
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1, #Opções para linhas não marcadas
colour = "gray90",
alpha = 0.5)) +
scale_color_npg()
br_mortes
#Mortes
br_mortes = mortes_doencas %>%
filter(year >= 2000 & year <= 2022,
region_complete == "Latin America and Caribbean") %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths) %>%
ggplot() +
geom_line(aes(x = round(year, 0),
y = total_deaths,
colour = name),
linewidth = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(vars(death_disease),
scales = "free",
nrow = 3) +
labs(title = "Mortes por doença imunoprevenível",
x = "Ano",
y = "Mortes") +
#highlight
gghighlight(name %in% c("Brazil", "Colombia"), #Linhas somente com name == "Brazil'
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1, #Opções para linhas não marcadas
colour = "gray90",
alpha = 0.5)) +
scale_color_npg()
br_mortes
cobertura_vacinal %>%
filter(year >= 2012 & year <= 2022,
region %in% c("LACR"))
br_cov
#Método 2
br_cov = cobertura_vacinal %>%
filter(year >= 2012 & year <= 2022,
region %in% c("LACR")) %>%
ggplot() +
geom_line(aes(x = year,
y = coverage,
colour = name),
linewidth = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(vars(vaccine)) +
labs(title = "Cobertura vacinal, por vacina",
x = "Ano",
y = "Cobertura (%)") +
gghighlight(name %in% c("Brazil", "Colombia"),
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1,
colour = "gray90",
alpha = 0.3)) +
scale_color_npg()
br_cov
#Mortes
br_mortes = mortes_doencas %>%
filter(year >= 2012 & year <= 2022,
region_complete == "Latin America and Caribbean",
death_disease != "Poliomyelitis") %>%
select(name, year, total_deaths, death_rate_100thousand, death_disease) %>%
distinct() %>%
drop_na(total_deaths) %>%
ggplot() +
geom_line(aes(x = round(year, 0),
y = total_deaths,
colour = name),
linewidth = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(vars(death_disease),
scales = "free",
nrow = 3) +
labs(title = "Mortes por doença imunoprevenível",
x = "Ano",
y = "Mortes") +
#highlight
gghighlight(name %in% c("Brazil", "Colombia"), #Linhas somente com name == "Brazil'
calculate_per_facet = T, #Add quando tiver facets
unhighlighted_params = list(linewidth = 1, #Opções para linhas não marcadas
colour = "gray90",
alpha = 0.5)) +
scale_color_npg()
br_mortes
# Unir gráficos
br_cov + br_mortes
```{r}
# Unir gráficos
br_cov + br_mortes
# Unir gráficos
patch = br_cov + br_mortes
#Salvar
ggsave(patch,
file = "br_cov_mortes.png",
width = 15, #Largura
height = 10) #Altura
patch
br_mortes
ggplotly(br_mortesbr_mortes)
ggplotly(br_mortes)
#Boxplot simples de ano
boxplot_regions = cobertura_vacinal %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2020)) %>%
mutate(year = as.factor(year)) %>%
ggplot() +
aes(x = year, y = coverage, fill = year) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(label = name),
alpha = 0.2,
na.rm = T) +
scale_fill_brewer(palette = "Set2", direction = 1) +
scale_color_distiller(palette = "Set2", direction = 1) +
theme_minimal() +
facet_wrap(vars(continent)) +
scale_fill_npg()
boxplot_regions
#Boxplot simples de ano
boxplot_regions = cobertura_vacinal %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2020)) %>%
mutate(year = as.factor(year)) %>%
ggplot() +
aes(x = year, y = coverage, fill = year) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(label = name),
alpha = 0.2,
na.rm = T) +
scale_fill_brewer(palette = "Set2", direction = 1) +
scale_color_distiller(palette = "Set2", direction = 1) +
theme_minimal() +
facet_wrap(vars(continent)) +
scale_fill_npg()
boxplot_regions
# Gráfico interativo
boxplot_regions %>%
ggplotly()
#Boxplot simples de ano
boxplot_regions = cobertura_vacinal %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2020)) %>%
mutate(year = as.factor(year)) %>%
ggplot() +
aes(x = year, y = coverage, fill = year) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(label = name),
alpha = 0.2,
na.rm = T) +
scale_fill_brewer(palette = "Set2", direction = 1) +
scale_color_distiller(palette = "Set2", direction = 1) +
theme_minimal() +
facet_wrap(vars(continent)) +
scale_fill_npg()
boxplot_regions
# Gráfico interativo
boxplot_regions %>%
ggplotly()
